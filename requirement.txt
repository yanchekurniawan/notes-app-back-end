1. CREATE NOTES
	- simpan di server
	- bentuk object js:
	  { id, title, createdAt, updatedAt, tags, body }
	- simpan melalui method POST path '/notes'
	- data yang dibawa berupa JSON:
	  { "title", "tags", "body" }
	- data lainnya digenerate system
	- id unique
	- success ? 201 (created) return
	  { 
		"status": "success", 
		"message": "Catatan berhasil ditambahkan",
		"data": {
		    "noteId": "V09YExygSUYogwWJ"
		}
	  }
	- fail ? 500 return
	  {
		"status": "error"
		"message": "Catatan gagal untuk ditambahkan"
	  }
2. READ NOTES
	- lakukan permintaan pada path '/notes' method GET
	- success ? 200 (OK) return
	  {
  		"status": "success",
  		"data": {
    		"notes": [
      		     {
        		"id":"notes-V1StGXR8_Z5jdHi6B-myT",
        		"title":"Catatan 1",
        		"createdAt":"2020-12-23T23:00:09.686Z",
        		"updatedAt":"2020-12-23T23:00:09.686Z",
        		"tags":[
          		"Tag 1",
          		"Tag 2"
        		],
        		"body":"Isi dari catatan 1"
      		     },
      		     {
        		"id":"notes-V1StGXR8_98apmLk3mm1",
        		"title":"Catatan 2",
        		"createdAt":"2020-12-23T23:00:09.686Z",
        		"updatedAt":"2020-12-23T23:00:09.686Z",
        		"tags":[
          		"Tag 1",
          		"Tag 2"
        		],
        		"body":"Isi dari catatan 2"
      		     }
    		   ]
  		}
	  }
	- notes == kosong return
	  {
  		"status": "success",
  		"data": {
    		    "notes": []
  		}
	  }
	- request melalui '/notes/{id}'
	- found id ? 200 (OK) return
	  {
  		"status": "success",
 		"data": {
   		    "note": {
      			"id":"notes-V1StGXR8_Z5jdHi6B-myT",
      		    	"title":"Catatan 1",
      			"createdAt":"2020-12-23T23:00:09.686Z",
      			"updatedAt":"2020-12-23T23:00:09.686Z",
      			"tags":[
      		  	    "Tag 1",
      		  	    "Tag 2"
     		 	],
      			"body":"Isi dari catatan 1"
    		    }
  		}
	  }
	- id not found ? 404 return
	  {
  		"status": "fail",
  		"message": "Catatan tidak ditemukan"
	  }
3. UPDATE NOTES
	- request melalui '/notes/{id}' method 'PUT'
	- server membawa data JSON sesuai id
	  {
  		"title":"Judul Catatan Revisi",
  		"tags":[
   		  "Tag 1",
    		  "Tag 2"
  		],
  		"body":"Konten catatan"
	  }
	- update success ? 200(OK) return
	  {
		"status": "success"
		"message": "Catatan berhasil diperbaharui"
	  }
	- id not found ? 404 (not found) return
	  {
  		"status": "fail",
  		"message": "Gagal memperbarui catatan. Id catatan tidak ditemukan"
	  }
4. DELETE NOTES
	- request to '/notes/{id}' method DELETE
	- success ? 200 (OK) return
	  {
 		"status": "success",
  		"message": "Catatan berhasil dihapus"
	  }
	- id not found ? 404 (not found) return
	  {
		"status": "fail",
  		"message": "Catatan gagal dihapus. Id catatan tidak ditemukan"
	  }